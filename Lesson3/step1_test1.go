package Lesson3

import "fmt"

// TODO На стандартный ввод подается 10 целых чисел, разделенных пробелами (числа могут повторяться).
//  Для чтения из стандартного ввода импортирован пакет fmt. Вам необходимо вычислить результат
//  выполнения функции work для каждого из полученных чисел. Функция work имеет следующий вид:
//  work(x int) int
//  Результаты вычислений , разделенные пробелами, должны быть напечатаны в строку.
//  Однако работа функции work занимает слишком много времени. Выделенного вам времени выполнения не хватит
//  на последовательную обработку каждого числа, поэтому необходимо реализовать кэширование уже готовых результатов
//  и использовать их в работе.
//  После завершения работы программы результат выполнения будет дополнен информацией о соблюдении установленного лимита времени выполнения.
func cachedWork() {
	results := make(map[int]int)
	for i := 0; i < 10; i++ {
		var element int
		fmt.Scan(&element)
		if _, ok := results[element]; !ok {
			results[element] = work(element)
			fmt.Printf("%d: Value added; ", results[element])
		} else {
			fmt.Printf("%d: Value getted;", results[element])
		}
	}
}

// Just a mocking func
func work(x int) int {
	x++
	return x
}
